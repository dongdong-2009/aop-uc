<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.hotent.platform.model.system.Resources">
	<resultMap id="Resources" type="com.hotent.platform.model.system.Resources">
		<id property="resId" column="resId" jdbcType="NUMERIC"/>
		<result property="resName" column="resName" jdbcType="VARCHAR"/>
		<result property="alias" column="alias" jdbcType="VARCHAR"/>
		<result property="sn" column="sn" jdbcType="NUMERIC"/>
		<result property="icon" column="icon" jdbcType="VARCHAR"/>
		<result property="parentId" column="parentId" jdbcType="NUMERIC"/>
		<result property="defaultUrl" column="defaultUrl" jdbcType="VARCHAR"/>
		<result property="isFolder" column="isFolder" jdbcType="NUMERIC"/>
		<result property="isDisplayInMenu" column="isDisplayInMenu" jdbcType="NUMERIC"/>
		<result property="isOpen" column="isOpen" jdbcType="NUMERIC"/>
		<result property="systemId" column="systemId" jdbcType="NUMERIC"/>
		<result property="path" column="path" jdbcType="VARCHAR" />
		<result property="isHidden" column="isHidden" jdbcType="NUMERIC" />
	</resultMap>
	
	<sql id="columns">
		resId,resName,alias,sn,icon,parentId,defaultUrl,isFolder,isDisplayInMenu,isOpen,systemId,path,isHidden
	</sql>
	
	<sql id="dynamicWhere">
		<where>
			<if test="@Ognl@isNotEmpty(resId)"> AND resId  =#{resId} </if>
			<if test="@Ognl@isNotEmpty(resName)"> AND resName  LIKE #{resName}  </if>
			<if test="@Ognl@isNotEmpty(alias)"> AND alias  LIKE #{alias}  </if>
			<if test="@Ognl@isNotEmpty(sn)"> AND sn  =#{sn} </if>
			<if test="@Ognl@isNotEmpty(icon)"> AND icon  LIKE #{icon}  </if>
			<if test="@Ognl@isNotEmpty(parentId)"> AND parentId  =#{parentId} </if>
			<if test="@Ognl@isNotEmpty(defaultUrl)"> AND defaultUrl  LIKE #{defaultUrl}  </if>
			<if test="@Ognl@isNotEmpty(isFolder)"> AND isFolder  =#{isFolder} </if>
			<if test="@Ognl@isNotEmpty(isDisplayInMenu)"> AND isDisplayInMenu  =#{isDisplayInMenu} </if>
			<if test="@Ognl@isNotEmpty(isOpen)"> AND isOpen  =#{isOpen} </if>
			<if test="@Ognl@isNotEmpty(systemId)"> AND systemId  =#{systemId} </if>
			<if test="@Ognl@isNotEmpty(isHidden)"> AND isHidden  =#{isHidden} </if>
		</where>
	</sql>

	<insert id="add" parameterType="com.hotent.platform.model.system.Resources">
		INSERT INTO sys_res
		(<include refid="columns"/>)
		VALUES
		(#{resId,jdbcType=NUMERIC}, #{resName,jdbcType=VARCHAR}, #{alias,jdbcType=VARCHAR}, #{sn,jdbcType=NUMERIC}, #{icon,jdbcType=VARCHAR}, #{parentId,jdbcType=NUMERIC}, #{defaultUrl,jdbcType=VARCHAR}, #{isFolder,jdbcType=NUMERIC}, #{isDisplayInMenu,jdbcType=NUMERIC}, #{isOpen,jdbcType=NUMERIC}, #{systemId,jdbcType=NUMERIC},#{path,jdbcType=VARCHAR},#{isHidden,jdbcType=NUMERIC})
	</insert>
	
	<delete id="delById" parameterType="java.lang.Long">
		DELETE FROM SYS_RES 
		WHERE
		resId=#{resId}
	</delete>
	
	<update id="update" parameterType="com.hotent.platform.model.system.Resources">
			UPDATE sys_res SET
			resName=#{resName,jdbcType=VARCHAR} , 
			alias=#{alias,jdbcType=VARCHAR} , 
			sn=#{sn,jdbcType=NUMERIC} , 
			icon=#{icon,jdbcType=VARCHAR} , 
			parentId=#{parentId,jdbcType=NUMERIC} , 
			defaultUrl=#{defaultUrl,jdbcType=VARCHAR} , 
			isFolder=#{isFolder,jdbcType=NUMERIC} , 
			isDisplayInMenu=#{isDisplayInMenu,jdbcType=NUMERIC} , 
			isOpen=#{isOpen,jdbcType=NUMERIC} , 
			systemId=#{systemId,jdbcType=NUMERIC},
			path =#{path,jdbcType=VARCHAR},
			isHidden =#{isHidden,jdbcType=NUMERIC}
			WHERE
			resId=#{resId}
	</update>
	
	<update id="updSn" parameterType="Map">
		update SYS_RES set 
			sn=#{sn,jdbcType=NUMERIC}
		where  
		 resId = #{resId}
	</update>
	
	<select id="getById" parameterType="java.lang.Long" resultMap="Resources">
		SELECT <include refid="columns"/>
		FROM SYS_RES
		WHERE
		resId=#{resId}
	</select>
	
	<select id="getAll" resultMap="Resources">
		SELECT <include refid="columns"/>
		FROM SYS_RES   
		<include refid="dynamicWhere" />
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		ORDER BY sn
		</if>
	</select>
	
	<select id="getBySystemIdAndParentId" resultMap="Resources">
		SELECT <include refid="columns"/>
		FROM SYS_RES   
		WHERE systemId=#{systemId} AND parentId=#{parentId}
		ORDER BY sn
	</select>
	
	<select id="getByParentId" parameterType="java.lang.Long" resultMap="Resources">
		SELECT <include refid="columns"/> FROM SYS_RES WHERE  parentId=#{parentId}  AND ISDISPLAYINMENU=1 ORDER BY sn
	</select>
	
	<select id="getByParentId1" parameterType="java.lang.Long" resultMap="Resources">
		SELECT <include refid="columns"/> FROM SYS_RES WHERE  parentId=#{parentId}
	</select>
	
	<select id="getByUrl" parameterType="java.lang.String" resultMap="Resources">
		SELECT <include refid="columns"/> FROM SYS_RES WHERE  defaultUrl=#{url} 
	</select>
	
	<select id="getBySystemId" parameterType="java.lang.Long" resultMap="Resources">
		SELECT <include refid="columns"/>
		FROM SYS_RES WHERE  systemId=#{systemId}
		ORDER BY sn
	</select>
	
	<select id="getBySystemIdAndIsHidden" parameterType="java.lang.Long" resultMap="Resources">
		SELECT <include refid="columns"/>
		FROM SYS_RES WHERE  systemId=#{systemId} and (isHidden=0 or isHidden is null)
		ORDER BY sn
	</select>
	
	<select id="getNormMenu" parameterType="java.util.Map" resultMap="Resources">
		SELECT DISTINCT res.resId,res.resName,res.alias,res.sn,res.icon,res.parentId,res.defaultUrl,
		res.isFolder,res.isDisplayInMenu,res.isOpen,res.systemId,res.isHidden
		FROM 
		SYS_ROLE_RES role_res,
		SYS_USER_ROLE user_role,
		SYS_RES res
		WHERE user_role.userId=#{userId}  	AND role_res.roleId=user_role.roleId
       	AND role_res.resId=res.resId AND res.systemId=#{systemId}
       	AND res.isDisplayInMenu=1
		ORDER BY sn
		
	</select>
	
	<select id="getNormMenuByRole" parameterType="java.util.Map" resultMap="Resources">
		SELECT DISTINCT res.resId,res.resName,res.alias,res.sn,res.icon,res.parentId,res.defaultUrl,
	    res.isFolder,res.isDisplayInMenu,res.isOpen,res.systemId,res.isHidden
	    FROM    
	    SYS_ROLE_RES role_res,
	    SYS_RES res
	    WHERE role_res.roleId in (select t.roleid from sys_role t where t.alias in (${rolealias})) 
         AND role_res.resId=res.resId AND res.systemId=#{systemId}
         AND res.isDisplayInMenu=1
    	ORDER BY sn		
	</select>
	<select id="getNormMenuByRoleAndResourceName" parameterType="java.util.Map" resultMap="Resources">
		SELECT DISTINCT res.resId,res.resName,res.alias,res.sn,res.icon,res.parentId,res.defaultUrl,
	    res.isFolder,res.isDisplayInMenu,res.isOpen,res.systemId,res.isHidden
	    FROM    
	    SYS_ROLE_RES role_res,
	    SYS_RES res
	    WHERE role_res.roleId in (select t.roleid from sys_role t where t.alias in (${rolealias})) 
         AND role_res.resId=res.resId AND res.systemId=#{systemId}
         AND res.isDisplayInMenu=1
         AND res.resName=#{resName}
    	ORDER BY sn		
	</select>
	
	<!-- 获取saas表的资源 -->
	<select id="getCloudSaasMenuByRole" parameterType="java.util.Map" resultMap="Resources">
		SELECT DISTINCT res.resId,res.resName,res.alias,res.sn,res.icon,res.parentId,res.defaultUrl,
	    res.isFolder,res.isDisplayInMenu,res.isOpen,res.systemId,res.isHidden
	    FROM
	    CLOUD_SAAS_ROLE_RES role_res,
	    SYS_RES res
	    WHERE role_res.roleId in (select t.role_id from cloud_saas_role t where t.role_alias in (${rolealias}))
         AND role_res.resId=res.resId AND res.systemId=#{systemId}
         AND res.isDisplayInMenu=1
         AND role_res.tenantId=#{tenantId}
         <if test="@Ognl@isNotEmpty(parentId)">
         	AND res.parentId = #{parentId}
         </if>
    	ORDER BY res.sn		
	</select>
	
	<select id="getCloudMenuByRole" parameterType="java.util.Map" resultMap="Resources">
		SELECT DISTINCT res.resId,res.resName,res.alias,res.sn,res.icon,res.parentId,res.defaultUrl,
	    res.isFolder,res.isDisplayInMenu,res.isOpen,res.systemId,res.isHidden
	    FROM    
	    SYS_ROLE_RES role_res,
	    SYS_RES res
	    WHERE role_res.roleId in (select t.roleid from sys_role t where t.alias in (${rolealias})) 
         AND role_res.resId=res.resId AND res.systemId=#{systemId}
         AND res.isDisplayInMenu=1
         <if test="@Ognl@isNotEmpty(parentId)">
         	AND res.parentId = #{parentId}
         </if>
    	ORDER BY res.sn		
	</select>
	
	<select id="getSuperMenu" parameterType="Long" resultMap="Resources">
		SELECT <include refid="columns"/>
		FROM SYS_RES
		WHERE systemId=#{systemId}  	AND isDisplayInMenu=1 	ORDER BY sn
	</select>
	
	
	<select id="getDefaultUrlAndRoleBySystemId" parameterType="java.lang.Long" resultType="com.hotent.platform.model.system.ResourcesUrlExt">
		SELECT DISTINCT A.defaultUrl url ,C.alias AS role
		FROM
		SYS_RES A
		LEFT JOIN SYS_ROLE_RES B ON (A.resId=B.resId)
		LEFT JOIN SYS_ROLE C ON (B.roleId=C.roleId)
		WHERE A.systemId=#{systemId} and A.defaultUrl is not null
	</select>
	
	<select id="getFunctionAndRoleBySystemId" parameterType="java.lang.Long" resultType="com.hotent.platform.model.system.ResourcesUrlExt">
		 SELECT DISTINCT C.alias AS role,A.alias AS func
			FROM SYS_RES A
			Left outer join  
			SYS_ROLE_RES B
			on A.resId=B.resId
			left outer join SYS_ROLE C
			on B.roleId=C.roleId
		    where A.systemId=#{systemId}
	</select>
	
	<select id="isAliasExists" resultType="Integer">
		SELECT count(1) as count FROM SYS_RES WHERE systemId=#{systemId}  AND alias=#{alias}
	</select>
	
	<select id="isAliasExistsForUpd" resultType="Integer">
		SELECT count(1) as count FROM SYS_RES WHERE systemId=#{systemId}  AND alias=#{alias} and resId!=#{resId}
	</select>
	
	<update id="updateIsHidden" parameterType="com.hotent.platform.model.system.Resources">
			UPDATE sys_res SET			
			isHidden = 1
			WHERE
			path like #{path}
	</update>
</mapper>
