<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.hotent.platform.model.system.SubSystem">
	<resultMap id="SubSystem" type="com.hotent.platform.model.system.SubSystem">
		<id property="systemId" column="systemId" jdbcType="NUMERIC"/>
		<result property="sysName" column="sysName" jdbcType="VARCHAR"/>
		<result property="alias" column="alias" jdbcType="VARCHAR"/>
		<result property="logo" column="logo" jdbcType="VARCHAR"/>
		<result property="defaultUrl" column="defaultUrl" jdbcType="VARCHAR"/>
		<result property="memo" column="memo" jdbcType="VARCHAR"/>
		<result property="createtime" column="createtime" jdbcType="TIMESTAMP"/>
		<result property="creator" column="creator" jdbcType="VARCHAR"/>
		<result property="allowDel" column="allowDel" jdbcType="NUMERIC"/>
		<result property="needOrg" column="needOrg" jdbcType="NUMERIC"/>
		<result property="isActive" column="isActive" jdbcType="NUMERIC"/>
		<result property="isLocal" column="isLocal" jdbcType="NUMERIC"/>
		<result property="homePage" column="homePage" jdbcType="VARCHAR"/>
		<result property="isShow" column="isShow" jdbcType="NUMERIC"/>
		<result property="sync" column="sync" jdbcType="NUMERIC"/>
	</resultMap>
	
	<resultMap id="SubSystemExt" extends="SubSystem"  type="com.hotent.platform.model.system.SubSystem">
		<collection property="roleList" ofType="com.hotent.platform.model.system.SysRole" javaType="ArrayList" column="systemId">
			<id property="roleId" column="roleId" />
			<result property="alias" column="roleAlias" />
			<result property="roleName" column="roleName" />
		</collection>
	</resultMap>
	
	<sql id="columns">
		systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,isShow,sync
	</sql>
	
	<sql id="dynamicWhere">
		<where>
			<if test="@Ognl@isNotEmpty(systemId)"> AND systemId  LIKE #{systemId} </if>
			<if test="@Ognl@isNotEmpty(sysName)"> AND sysName  LIKE #{sysName}  </if>
			<if test="@Ognl@isNotEmpty(alias)"> AND alias  LIKE #{alias}  </if>
			<if test="@Ognl@isNotEmpty(logo)"> AND logo  LIKE #{logo} </if>
			<if test="@Ognl@isNotEmpty(defaultUrl)"> AND defaultUrl  LIKE #{defaultUrl}  </if>
			<if test="@Ognl@isNotEmpty(memo)"> AND memo  LIKE #{memo}  </if>
			<if test="@Ognl@isNotEmpty(begincreatetime)"> AND createtime  >=#{begincreatetime} </if>
			<if test="@Ognl@isNotEmpty(endcreatetime)"> AND createtime &lt;=#{endcreatetime}</if>
			<if test="@Ognl@isNotEmpty(creator)"> AND creator  LIKE #{creator} </if>
			<if test="@Ognl@isNotEmpty(allowDel)"> AND allowDel  =#{allowDel} </if>
			<if test="@Ognl@isNotEmpty(needOrg)"> AND needOrg  =#{needOrg} </if>
			<if test="@Ognl@isNotEmpty(isActive)"> AND isActive  =#{isActive} </if>
			<if test="@Ognl@isNotEmpty(isLocal)"> AND isLocal  =#{isLocal} </if>
			<if test="@Ognl@isNotEmpty(homePage)"> AND homePage  =#{homePage} </if>
			<if test="@Ognl@isNotEmpty(isShow)"> AND isShow  =#{isShow} </if>
			<if test="@Ognl@isNotEmpty(sync)"> AND sync  =#{sync} </if>
			</where>
	</sql>

	<insert id="add" parameterType="com.hotent.platform.model.system.SubSystem">
		INSERT INTO sys_subsystem
		(<include refid="columns"/>)
		VALUES
		(#{systemId,jdbcType=NUMERIC}, #{sysName,jdbcType=VARCHAR}, #{alias,jdbcType=VARCHAR}, #{logo,jdbcType=VARCHAR}, #{defaultUrl,jdbcType=VARCHAR}, #{memo,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{creator,jdbcType=VARCHAR}, #{allowDel,jdbcType=NUMERIC}, #{needOrg,jdbcType=NUMERIC}, #{isActive,jdbcType=NUMERIC}, #{isLocal,jdbcType=NUMERIC}, #{homePage,jdbcType=VARCHAR},#{isShow,jdbcType=NUMERIC},#{sync,jdbcType=NUMERIC})
	</insert>
	
	<delete id="delById" parameterType="java.lang.Long">
		DELETE FROM SYS_SUBSYSTEM 
		WHERE
		systemId=#{systemId}
		and allowDel=1
	</delete>
	
	<update id="update" parameterType="com.hotent.platform.model.system.SubSystem">
		UPDATE sys_subsystem 
		<set>
			<if test="sysName!=null">sysName=#{sysName,jdbcType=VARCHAR} ,</if>
			<if test="alias!=null">alias=#{alias,jdbcType=VARCHAR} ,</if>
			<if test="logo!=null">logo=#{logo,jdbcType=VARCHAR} ,</if>
			<if test="defaultUrl!=null">defaultUrl=#{defaultUrl,jdbcType=VARCHAR} ,</if>
			<if test="memo!=null">memo=#{memo,jdbcType=VARCHAR} ,</if>
			<if test="createtime!=null">createtime=#{createtime,jdbcType=TIMESTAMP} ,</if>
			<if test="creator!=null">creator=#{creator,jdbcType=VARCHAR} ,</if>
			<if test="allowDel!=null">allowDel=#{allowDel,jdbcType=NUMERIC} ,</if>
			<if test="needOrg!=null">needOrg=#{needOrg,jdbcType=NUMERIC} ,</if>
			<if test="isActive!=null">isActive=#{isActive,jdbcType=NUMERIC} ,</if>
			<if test="isLocal!=null">isLocal=#{isLocal,jdbcType=NUMERIC} ,</if>
			<if test="homePage!=null">homePage=#{homePage,jdbcType=VARCHAR} ,</if>
			<if test="isShow!=null">isShow=#{isShow,jdbcType=NUMERIC} ,</if>
			<if test="sync!=null">sync=#{sync,jdbcType=NUMERIC} ,</if>
		</set>
		WHERE
		systemId=#{systemId}
	</update>
	
	<select id="getById" parameterType="java.lang.Long" resultMap="SubSystem">
		SELECT <include refid="columns"/> FROM SYS_SUBSYSTEM 	WHERE 	systemId=#{systemId}
	</select>
	
	<select id="isAliasExist" parameterType="String" resultType="Integer">
		SELECT count(*) FROM SYS_SUBSYSTEM 	WHERE alias=#{alias}
	</select>
	
	
	<select id="getByAlias" parameterType="java.lang.String" resultMap="SubSystem">
		SELECT <include refid="columns"/> FROM SYS_SUBSYSTEM 	WHERE alias=#{alias}
	</select>
	
	
	<select id="isAliasExistForUpd" parameterType="Map" resultType="Integer">
		SELECT count(*) FROM SYS_SUBSYSTEM 	WHERE alias=#{alias} and systemId &lt;> #{systemId}
	</select>
	
	<select id="getAll" resultMap="SubSystem">
		SELECT <include refid="columns"/>
		FROM SYS_SUBSYSTEM   
		<include refid="dynamicWhere" />
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by createtime  desc
		</if>
	</select>
	<select id="getSubSystemList" resultMap="SubSystemExt">
		SELECT a.systemId,a.sysName,a.alias,a.logo,a.defaultUrl,a.memo,a.createtime,a.creator,a.allowDel,a.needOrg,a.isActive,a.homePage
		b.roleId,b.alias as roleAlias,b.roleName
		 from SYS_SUBSYSTEM a,SYS_ROLE b where a.systemId=b.systemId
	</select>
	
	<select id="getByRoles" resultMap="SubSystem">
		select distinct a.* 
        from SYS_SUBSYSTEM a ,SYS_ROLE b where  
        	a.systemId=b.systemId and b.alias in (${roleNames})
	</select>
	
	<select id="getLocalSystem" parameterType="java.lang.Short" resultMap="SubSystem">
		SELECT <include refid="columns"/>
		FROM SYS_SUBSYSTEM   
		WHERE isLocal=#{isLocal}
	</select>
	
	<select id="getActiveSystem"  resultMap="SubSystem">
		SELECT <include refid="columns"/> FROM SYS_SUBSYSTEM  WHERE isActive=1
	</select>
	<!--  获取所有注册的子系统-->
	<!-- <select id="getActiveANDnotActiveSystem"  resultMap="SubSystem">
		SELECT <include refid="columns"/> FROM SYS_SUBSYSTEM 
	</select> -->

</mapper>
