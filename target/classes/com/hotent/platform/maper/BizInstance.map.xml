<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.hotent.platform.model.biz.BizInstance">
	<resultMap id="BizInstance" type="com.hotent.platform.model.biz.BizInstance">
		<id property="bizInstanceId" column="BIZ_INSTANCE_ID" jdbcType="NUMERIC"/>
		<result property="bizDefId" column="BIZ_DEF_ID" jdbcType="NUMERIC"/>
		<result property="status" column="STATUS" jdbcType="NUMERIC"/>
		<result property="startTime" column="START_TIME" jdbcType="TIMESTAMP"/>
		<result property="endTime" column="END_TIME" jdbcType="TIMESTAMP"/>
		<result property="createBy" column="CREATE_BY" jdbcType="NUMERIC"/>
	</resultMap>

	<sql id="columns">
		BIZ_INSTANCE_ID,BIZ_DEF_ID,STATUS,START_TIME,END_TIME,CREATE_BY
	</sql>
	
	<sql id="dynamicWhere">
		<where>
			<if test="@Ognl@isNotEmpty(bizInstanceId)"> AND BIZ_INSTANCE_ID  =#{bizInstanceId} </if>
			<if test="@Ognl@isNotEmpty(bizDefId)"> AND BIZ_DEF_ID  =#{bizDefId} </if>
			<if test="@Ognl@isNotEmpty(status)"> AND STATUS  =#{status} </if>
			<if test="@Ognl@isNotEmpty(startTime)"> AND START_TIME  =#{startTime} </if>
			<if test="@Ognl@isNotEmpty(beginstartTime)"> AND START_TIME  >=#{beginstartTime,jdbcType=TIMESTAMP} </if>
			<if test="@Ognl@isNotEmpty(endstartTime)"> AND START_TIME <![CDATA[ <=#{endstartTime,jdbcType=TIMESTAMP}]]> </if>
			<if test="@Ognl@isNotEmpty(endTime)"> AND END_TIME  =#{endTime} </if>
			<if test="@Ognl@isNotEmpty(beginendTime)"> AND END_TIME  >=#{beginendTime,jdbcType=TIMESTAMP} </if>
			<if test="@Ognl@isNotEmpty(endendTime)"> AND END_TIME <![CDATA[ <=#{endendTime,jdbcType=TIMESTAMP}]]> </if>
			<if test="@Ognl@isNotEmpty(createBy)"> AND CREATE_BY  =#{createBy} </if>
		</where>
	</sql>

	<insert id="add" parameterType="com.hotent.platform.model.biz.BizInstance">
		INSERT INTO BIZ_INSTANCE
		(BIZ_INSTANCE_ID,BIZ_DEF_ID,STATUS,START_TIME,END_TIME,CREATE_BY)
		VALUES
		(#{bizInstanceId,jdbcType=NUMERIC}, #{bizDefId,jdbcType=NUMERIC}, #{status,jdbcType=NUMERIC}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=NUMERIC})
	</insert>
	
	<delete id="delById" parameterType="java.lang.Long">
		DELETE FROM BIZ_INSTANCE 
		WHERE
		BIZ_INSTANCE_ID=#{bizInstanceId}
	</delete>
	
	<update id="update" parameterType="com.hotent.platform.model.biz.BizInstance">
		UPDATE BIZ_INSTANCE SET
		BIZ_DEF_ID=#{bizDefId,jdbcType=NUMERIC},
		STATUS=#{status,jdbcType=NUMERIC},
		START_TIME=#{startTime,jdbcType=TIMESTAMP},
		END_TIME=#{endTime,jdbcType=TIMESTAMP},
		CREATE_BY=#{createBy,jdbcType=NUMERIC}
		WHERE
		BIZ_INSTANCE_ID=#{bizInstanceId}
	</update>
		    
	<select id="getById" parameterType="java.lang.Long" resultMap="BizInstance">
		SELECT <include refid="columns"/>
		FROM BIZ_INSTANCE
		WHERE
		BIZ_INSTANCE_ID=#{bizInstanceId}
	</select>
	
	<select id="getAll" resultMap="BizInstance">
		SELECT <include refid="columns"/>
		FROM BIZ_INSTANCE   
		<include refid="dynamicWhere" />
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by BIZ_INSTANCE_ID  desc
		</if>
	</select>
</mapper>
